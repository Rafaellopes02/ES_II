@{
    ViewData["Title"] = "Gestão de Eventos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    main {
        background-color: #f8f9fa;
        padding: 2rem;
    }

    .hero-header {
        background: linear-gradient(135deg, #8505fd, #2a4798);
        color: #fff;
        padding: 2.5rem 1rem;
        border-radius: 0.5rem;
        text-align: center;
        margin-bottom: 2rem;
    }

    .summary-card {
        border: none;
        border-radius: 0.5rem;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .summary-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }

    .summary-card .card-body {
        padding: 1.5rem;
        background: linear-gradient(135deg, #8505fd, #2a4798);
        color: white;
        text-align: center;
    }

    .summary-card .card-title {
        font-size: 1.25rem;
        margin-bottom: 0.5rem;
    }

    .summary-card .display-4 {
        font-size: 2.5rem;
    }
</style>

<main class="container-fluid">
    <header class="hero-header">
        <h1>Gestão de eventos</h1>
        <p>Acompanhe os indicadores principais do seu sistema de eventos</p>
    </header>
    
    

    <section class="mb-4">
        <div class="row">
            <div class="col-md-4 mb-3">
                <div class="card summary-card h-100">
                    <div class="card-body">
                        <h5 class="card-title">Eventos</h5>
                        <p class="card-text display-4" id="totalEventos">...</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card summary-card h-100">
                    <div class="card-body">
                        <h5 class="card-title">Participantes</h5>
                        <p class="card-text display-4" id="totalParticipantes">...</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card summary-card h-100">
                    <div class="card-body">
                        <h5 class="card-title">Categorias</h5>
                        <p class="card-text display-4" id="totalCategorias">...</p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <div class="alert alert-info text-center my-3" id="userTypeMessage"></div>

<a class="btn btn-outline-secondary" href="/dashboard/eventoscomgraficos">
    Ver Participação por Evento
</a>
</main>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const token = localStorage.getItem("jwtToken");
        if (!token) {
            window.location.href = "/login";
            return;
        }

        try {
            const response = await fetch("/dashboard/stats", {
                headers: {
                    "Authorization": `Bearer ${token}`
                }
            });

            if (response.ok) {
                const data = await response.json();
                document.getElementById("totalEventos").textContent = data.totalEventos;
                document.getElementById("totalParticipantes").textContent = data.totalParticipantes;
                document.getElementById("totalCategorias").textContent = data.totalCategorias;
            } else if (response.status === 401) {
                alert("Não autorizado. Faça login novamente.");
                localStorage.removeItem("jwtToken");
                window.location.href = "/login";
                return;
            } else {
                alert("Erro ao buscar dados da dashboard.");
            }
        } catch (error) {
            console.error(error);
            alert("Erro de comunicação com o servidor.");
        }

        // ⚠️ IMPORTANTE: analisar o token e extrair o payload
        try {
            const payload = JSON.parse(atob(token.split('.')[1]));
            const tipoId = payload.TipoUtilizadorId;
            const userMessage = document.getElementById("userTypeMessage");

            if (tipoId === "1") {
                userMessage.textContent = "Você está autenticado como Admin";
            } else if (tipoId === "2") {
                userMessage.textContent = "Você está autenticado como Gestor de Utilizadores.";
            } else if (tipoId === "3") {
                userMessage.textContent = "Você está autenticado como participante.";
            } else {
                userMessage.textContent = "Tipo de utilizador desconhecido.";
            }
        } catch (e) {
            console.error("Erro ao analisar o token:", e);
            document.getElementById("userTypeMessage").textContent = "Erro ao identificar o tipo de utilizador.";
        }
    });
</script>
