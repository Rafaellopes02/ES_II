@{
    ViewData["Title"] = "Gestão de Eventos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    main {
        background-color: #f8f9fa;
        padding: 2rem;
    }

    .hero-header {
        background: linear-gradient(135deg, #8505fd, #2a4798);
        color: #fff;
        padding: 2.5rem 1rem;
        border-radius: 0.5rem;
        text-align: center;
        margin-bottom: 2rem;
    }

    .summary-card {
        border: none;
        border-radius: 0.5rem;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .summary-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }

    .summary-card .card-body {
        padding: 1.5rem;
        background: linear-gradient(135deg, #8505fd, #2a4798);
        color: white;
        text-align: center;
    }

    .summary-card .card-title {
        font-size: 1.25rem;
        margin-bottom: 0.5rem;
    }

    .summary-card .display-4 {
        font-size: 2.5rem;
    }
</style>

<main class="container-fluid">
    <header class="hero-header">
        <h1>Gestão de eventos</h1>
        <p>Acompanhe os indicadores principais do seu sistema de eventos</p>
    </header>
    
    

    <section class="mb-4">
        <div class="row">
            <div class="col-md-4 mb-3">
                <div class="card summary-card h-100">
                    <div class="card-body">
                        <h5 class="card-title">Eventos</h5>
                        <p class="card-text display-4" id="totalEventos">...</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card summary-card h-100">
                    <div class="card-body">
                        <h5 class="card-title">Participantes</h5>
                        <p class="card-text display-4" id="totalParticipantes">...</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card summary-card h-100">
                    <div class="card-body">
                        <h5 class="card-title">Categorias</h5>
                        <p class="card-text display-4" id="totalCategorias">...</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

<a class="btn btn-outline-secondary" href="/dashboard/eventoscomgraficos">
    Ver Participação por Evento
</a>
</main>

    <script>
        document.addEventListener("DOMContentLoaded", async () => {
        // Função para obter dados do utilizador autenticado
        async function getUserInfo() {
            try {
                const response = await fetch("/api/auth/me", {
                    credentials: "include" // envia o cookie jwtToken
                });

                if (!response.ok) throw new Error("Token inválido");

                const data = await response.json();
                return {
                    userId: parseInt(data.userId),
                    tipoUtilizador: parseInt(data.tipoUtilizador)
                };
            } catch (err) {
                console.error("Erro ao obter dados do utilizador:", err);
                return null;
            }
        }

        // Verificar autenticação
        const userInfo = await getUserInfo();
        if (!userInfo || !userInfo.userId || !userInfo.tipoUtilizador) {
        window.location.href = "/login";
        return;
    }

        // Carregar dados da dashboard
        try {
        const response = await fetch("/dashboard/stats", {
        credentials: "include"
    });

        if (response.ok) {
        const data = await response.json();
        document.getElementById("totalEventos").textContent = data.totalEventos;
        document.getElementById("totalParticipantes").textContent = data.totalParticipantes;
        document.getElementById("totalCategorias").textContent = data.totalCategorias;
    } else if (response.status === 401) {
        alert("Não autorizado. Faça login novamente.");
        window.location.href = "/login";
    } else {
        alert("Erro ao buscar dados da dashboard.");
    }
    } catch (error) {
        console.error("Erro de comunicação com o servidor:", error);
        alert("Erro de comunicação com o servidor.");
    }
    });
</script>


