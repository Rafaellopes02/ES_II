@{
    ViewData["Title"] = "Gestão de Eventos";
}

<link rel="stylesheet" href="~/css/eventos.css" />

<style>
    body {
        background-color: #f5f5f5;
    }

    .event-tabs {
        background-color: #ffffff;
        padding: 1rem 2rem;
        border-radius: 1rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        margin-bottom: 2rem;
    }

    .nav-tabs .nav-link {
        border: 1px solid #dee2e6;
        border-radius: 0.5rem;
        margin-right: 0.5rem;
        background-color: #ffffff;
        color: #495057;
        font-weight: 500;
        transition: 0.2s ease-in-out;
    }

    .nav-tabs .nav-link.active,
    .nav-tabs .nav-link:hover {
        background-color: #e9ecef;
        color: #000;
    }

    .event-card {
        background-color: white;
        border-radius: 1rem;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        transition: transform 0.2s ease;
    }

    .event-card:hover {
        transform: translateY(-4px);
    }

    .event-card h5 {
        font-weight: 700;
    }

    .event-card p {
        margin-bottom: 0.5rem;
        color: #6c757d;
    }

    .btn-custom {
        border-radius: 50px;
        font-size: 0.95rem;
        padding: 0.45rem 1.25rem;
        font-weight: 500;
        margin: 0.25rem;
        transition: 0.3s ease all;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);
    }

    .btn-primary,
    .btn-primary-custom {
        background-color: #0d6efd;
        border: none;
        color: white;
    }

    .btn-primary:hover,
    .btn-primary-custom:hover {
        background-color: #0b5ed7;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        border: none;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    .btn-outline-success {
        border: 2px solid #198754;
        color: #198754;
        background-color: transparent;
    }

    .btn-outline-success:hover {
        background-color: #198754;
        color: white;
    }

    .btn-outline-muted {
        border: 1px solid #ced4da;
        background-color: #f8f9fa;
        color: #495057;
        transition: 0.2s ease;
    }

    .btn-outline-muted:hover {
        background-color: #e2e6ea;
        color: #212529;
    }

    .form-control {
        border-radius: 0.5rem;
        box-shadow: none;
        border: 1px solid #ced4da;
    }

    .form-control:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
    }
</style>

<main class="container-fluid">
    <section>
        <!-- Filtros por tipo -->
        <div class="event-tabs d-flex justify-content-between align-items-center flex-wrap">
            <ul class="nav nav-tabs mb-2">
                <li class="nav-item">
                    <a class="nav-link active" href="#" onclick="filterEvents('all')">Todos</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterEvents('upcoming')">Futuros</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterEvents('past')">Passados</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterEvents('subscribed')">Inscritos</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" onclick="filterEvents('organizer')">Organizador</a>
                </li>
            </ul>
            <div class="d-flex flex-wrap gap-2">
                <button class="btn btn-primary btn-custom" data-toggle="modal" data-target="#newEventModal">+ Novo Evento</button>
                <button class="btn btn-secondary btn-custom" id="gerarRelatorioGeral">Gerar Relatório</button>
                <a href="/carrinho" class="btn btn-outline-success btn-custom">🛒 Ver Carrinho</a>
            </div>
        </div>

        <!-- Modais -->
        @Html.Partial("_ModalNovoEvento")
        @Html.Partial("_ModalEditarEvento")

        <!-- Filtros -->
        <div class="row my-3">
            <div class="col-md-2">
                <input type="text" id="searchNome" class="form-control" placeholder="Nome do Evento" />
            </div>
            <div class="col-md-2">
                <input type="date" id="searchData" class="form-control" />
            </div>
            <div class="col-md-2">
                <input type="text" id="searchLocal" class="form-control" placeholder="Local" />
            </div>
            <div class="col-md-2">
                <select id="searchCategoria" class="form-control">
                    <option value="">Todas as Categorias</option>
                </select>
            </div>
            <div class="col-md-2">
                <button id="btnPesquisar" class="btn btn-outline-muted btn-custom">Pesquisar</button>
            </div>
        </div>

        <!-- Lista de eventos -->
        <div id="eventList" class="row">
            <!-- Renderizado via JS -->
        </div>

        <!-- Modal de Ingressos -->
        <div class="modal fade" id="modalIngressos" tabindex="-1" role="dialog" aria-labelledby="modalIngressosLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalIngressosLabel">Escolher Ingresso</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <select class="form-control" id="selectIngresso"></select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-custom" data-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-primary btn-custom" id="confirmarIngressoBtn">Confirmar</button>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<!-- Scripts Bootstrap e jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

<!-- SweetAlert2 -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- ✅ Scripts do projeto (após HTML estar pronto) -->
<script src="~/js/Eventos/eventos.js?v=1.0.5"></script>
<script src="~/js/Eventos/eventosModal.js?v=1.0.5"></script>
<script src="~/js/Eventos/Relatorioeventos.js?v=1.0.5"></script>
<script src="~/js/Eventos/filtrosEventos.js?v=1.0.5"></script>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        async function getUserInfo() {
            try {
                const response = await fetch("/api/auth/me", {
                    credentials: "include"
                });

                if (!response.ok) throw new Error("Token inválido");

                const data = await response.json();
                return {
                    userId: parseInt(data.userId),
                    tipoUtilizador: parseInt(data.tipoUtilizador)
                };
            } catch (err) {
                console.error("Erro ao obter dados do utilizador:", err);
                return null;
            }
        }

        const userInfo = await getUserInfo();
        if (!userInfo || !userInfo.userId || !userInfo.tipoUtilizador) {
            window.location.href = "/login";
            return;
        }
    });
</script>
